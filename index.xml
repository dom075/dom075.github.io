<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jed Wu</title>
    <link>https://dom075.github.io/</link>
    <description>Recent content on Jed Wu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jul 2020 16:45:09 +0800</lastBuildDate>
    
	<atom:link href="https://dom075.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java</title>
      <link>https://dom075.github.io/java/java/</link>
      <pubDate>Tue, 07 Jul 2020 11:06:46 +0800</pubDate>
      
      <guid>https://dom075.github.io/java/java/</guid>
      <description>java is good</description>
    </item>
    
    <item>
      <title>Python 第6天 方法</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC6%E5%A4%A9_%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 06 Jul 2020 17:51:56 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC6%E5%A4%A9_%E6%96%B9%E6%B3%95/</guid>
      <description>方法 方法定义  用def关键字来申明方法。  def fac(num): result = 1 for n in range(1, num + 1): result *= n return result m = int(input(&amp;#39;m = &amp;#39;)) n = int(input(&amp;#39;n = &amp;#39;)) print(fac(m) // fac(n) // fac(m - n)) Python可以重复定义方法（后面的声明覆盖前面的声明），调用时选取最后的声明。  def foo(): print(&amp;#39;hello, world!</description>
    </item>
    
    <item>
      <title>Python 第5天 from import</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC5%E5%A4%A9_from_import/</link>
      <pubDate>Sun, 05 Jul 2020 17:51:56 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC5%E5%A4%A9_from_import/</guid>
      <description>import 和 from import的区别 两个import语义有差异
import datetime print(datetime.datetime.now()) 是引入整个datetime包</description>
    </item>
    
    <item>
      <title>Python 第4天 for循环</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC4%E5%A4%A9_for%E5%BE%AA%E7%8E%AF/</link>
      <pubDate>Sat, 04 Jul 2020 17:51:56 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC4%E5%A4%A9_for%E5%BE%AA%E7%8E%AF/</guid>
      <description>for-in循环 sum = 0 for x in range(101): sum += x print(sum) while循环 用break退出，continue跳到下一个循环。</description>
    </item>
    
    <item>
      <title>Python 第2天 If</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC3%E5%A4%A9_if/</link>
      <pubDate>Fri, 03 Jul 2020 17:51:56 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC3%E5%A4%A9_if/</guid>
      <description> If语句 Python 没有花括号，用缩进来表示层次。（一般用四个空格而不是Tab）。
if x &amp;gt; 1: y = 3 * x - 5 elif x &amp;gt;= -1: y = x + 2 else: y = 5 * x + 3 </description>
    </item>
    
    <item>
      <title>Python 第2天 变量</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC2%E5%A4%A9_%E5%8F%98%E9%87%8F/</link>
      <pubDate>Thu, 02 Jul 2020 17:51:56 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC2%E5%A4%A9_%E5%8F%98%E9%87%8F/</guid>
      <description>Python常用变量  整型： Python 3.x之后只有int了，可以处理任意大小的整数，同时也支持二进制、八进制、十六进制等等。 浮点型： 小数（支持一般的122.45和科学计数法 1.2e2）. 字符串： &amp;lsquo;hello&amp;rsquo; &amp;ldquo;hello&amp;rdquo; 多行要用三个单引号或双引号。 布尔型： True / False 或 2 == 1 这种运算  变量命名  不能数字开头  运算符 略（常用的那些，没啥好讲）</description>
    </item>
    
    <item>
      <title>Python 第1天 HelloWorld</title>
      <link>https://dom075.github.io/python/day01_15/python_%E7%AC%AC1%E5%A4%A9_helloworld/</link>
      <pubDate>Wed, 01 Jul 2020 11:35:34 +0800</pubDate>
      
      <guid>https://dom075.github.io/python/day01_15/python_%E7%AC%AC1%E5%A4%A9_helloworld/</guid>
      <description>Python特点  解释型语言，对两种主流的编程范式（面向对象和函数式编程）都提供支持。 执行效率较低，代码无法加密。 开发时可选择的框架太多。  安装Python解释器 可以在Python官网下载。
安装过程网上很多，查一下就行。</description>
    </item>
    
  </channel>
</rss>